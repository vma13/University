Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_udivmodhi4.o)
                              nd101-8-ps2.o (__udivmodhi4)
/usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
                              nd101-8-ps2.o (__do_copy_data)
/usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
                              nd101-8-ps2.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

disbuf              0x1               nd101-8-ps2.o
KeyV                0x1               nd101-8-ps2.o
keybuf              0x1               nd101-8-ps2.o
_FLAG               0x1               nd101-8-ps2.o

Discarded input sections

 .stabstr       0x00000000        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
LOAD nd101-8-ps2.o
LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xd0a
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026      0x7a2 nd101-8-ps2.o
                0x00000026                UnShifted
                0x00000628                hanzi
                0x00000110                font6x8
                0x0000009a                Shifted
                0x00000338                shuzi
                0x000007c8                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
 *(.init0)
 .init0         0x000007c8        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
                0x000007c8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000007c8        0xc /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000007d4       0x16 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
                0x000007d4                __do_copy_data
 .init4         0x000007ea       0x10 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
                0x000007ea                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000007fa        0x4 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000007fe        0x2 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
                0x000007fe                __vector_1
                0x000007fe                __vector_12
                0x000007fe                __bad_interrupt
                0x000007fe                __vector_6
                0x000007fe                __vector_3
                0x000007fe                __vector_11
                0x000007fe                __vector_13
                0x000007fe                __vector_17
                0x000007fe                __vector_7
                0x000007fe                __vector_5
                0x000007fe                __vector_4
                0x000007fe                __vector_9
                0x000007fe                __vector_15
                0x000007fe                __vector_8
                0x000007fe                __vector_14
                0x000007fe                __vector_10
                0x000007fe                __vector_16
                0x000007fe                __vector_18
 .text          0x00000800      0x4e0 nd101-8-ps2.o
                0x00000a90                scakey
                0x00000850                LCD_clear
                0x0000093a                LCD_write_hanzi
                0x0000087c                LCD_write_char
                0x000009b6                Decode
                0x0000081a                LCD_init
                0x00000b16                main
                0x00000800                LCD_write_byte
                0x00000ab0                __vector_2
                0x00000836                LCD_set_XY
                0x000008be                LCD_write_shu
 .text          0x00000ce0        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x00000ce0        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
 .text          0x00000ce0        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
 .text          0x00000ce0        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
                0x00000ce0                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000ce0       0x28 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_udivmodhi4.o)
                0x00000ce0                __udivmodhi4
 .text.libgcc   0x00000d08        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000d08        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000d08        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
                0x00000d08                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000d08        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
                0x00000d08                exit
                0x00000d08                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000d08        0x2 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000d0a                _etext = .

.data           0x00800060        0x0 load address 0x00000d0a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 nd101-8-ps2.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x8
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800060        0x4 nd101-8-ps2.o
                0x00800063                Shift
                0x00800061                DisNum
                0x00800060                IntNum
                0x00800062                Key_UP
 .bss           0x00800064        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x00800064        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
 .bss           0x00800064        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x00800064        0x0 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800064        0x4 nd101-8-ps2.o
                0x00800064                disbuf
                0x00800065                KeyV
                0x00800066                keybuf
                0x00800067                _FLAG
                0x00800068                PROVIDE (__bss_end, .)
                0x00000d0a                __data_load_start = LOADADDR (.data)
                0x00000d0a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800068        0x0
                0x00800068                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800068                PROVIDE (__noinit_end, .)
                0x00800068                _end = .
                0x00800068                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0x378
 *(.stab)
 .stab          0x00000000      0x378 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x14
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x14 nd101-8-ps2.o

.debug_pubnames
                0x00000000      0x144
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x144 nd101-8-ps2.o

.debug_info     0x00000000      0x724
 *(.debug_info)
 .debug_info    0x00000000      0x724 nd101-8-ps2.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x1f2
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1f2 nd101-8-ps2.o

.debug_line     0x00000000      0x45d
 *(.debug_line)
 .debug_line    0x00000000      0x45d nd101-8-ps2.o

.debug_frame    0x00000000       0x94
 *(.debug_frame)
 .debug_frame   0x00000000       0x94 nd101-8-ps2.o

.debug_str      0x00000000      0x23b
 *(.debug_str)
 .debug_str     0x00000000      0x23b nd101-8-ps2.o
                                0x2a1 (size before relaxing)

.debug_loc      0x00000000      0x278
 *(.debug_loc)
 .debug_loc     0x00000000      0x278 nd101-8-ps2.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(nd101-8-ps2.elf elf32-avr)

Cross Reference Table

Symbol                                            File
Decode                                            nd101-8-ps2.o
DisNum                                            nd101-8-ps2.o
IntNum                                            nd101-8-ps2.o
KeyV                                              nd101-8-ps2.o
Key_UP                                            nd101-8-ps2.o
LCD_clear                                         nd101-8-ps2.o
LCD_init                                          nd101-8-ps2.o
LCD_set_XY                                        nd101-8-ps2.o
LCD_write_byte                                    nd101-8-ps2.o
LCD_write_char                                    nd101-8-ps2.o
LCD_write_hanzi                                   nd101-8-ps2.o
LCD_write_shu                                     nd101-8-ps2.o
Shift                                             nd101-8-ps2.o
Shifted                                           nd101-8-ps2.o
UnShifted                                         nd101-8-ps2.o
_FLAG                                             nd101-8-ps2.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_clear_bss.o)
                                                  nd101-8-ps2.o
__do_copy_data                                    /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_copy_data.o)
                                                  nd101-8-ps2.o
__heap_end                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__stack                                           /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
                                                  nd101-8-ps2.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_udivmodhi4.o)
                                                  nd101-8-ps2.o
__vector_1                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_11                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_2                                        nd101-8-ps2.o
                                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_6                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_9                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
disbuf                                            nd101-8-ps2.o
exit                                              /usr/lib/gcc/avr/4.1.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
font6x8                                           nd101-8-ps2.o
hanzi                                             nd101-8-ps2.o
keybuf                                            nd101-8-ps2.o
main                                              nd101-8-ps2.o
                                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr4/crtm8.o
scakey                                            nd101-8-ps2.o
shuzi                                             nd101-8-ps2.o
