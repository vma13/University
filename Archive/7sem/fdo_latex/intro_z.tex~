\section{Введение}
Последние пять лет ознаменовались фантастическим развитием Интернета и новых способов общения между людьми. На переднем крае этого явления находится \textit{World Wide Web (WWW)}. Ежедневно в этой новой коммуникационной среде открываются тысячи новых сайтов, а потребителям предлагаются новые виды услуг. Вместе с бурным развитием рынка появился огромный спрос на новые технологии и разработчиков, владеющих ими. Комплексная веб разработка сайтов различной тематики и направленности предусматривает создание нового или оптимизацию под нужные характеристики уже готового шаблона сайта, выбор и установку наиболее подходящей системы управления контентом и, при необходимости, заполнение ресурса контентом.Чтобы создать удобный и функциональный web-сайт используют различные технические средства, например HTML,  JavaSсript, Flash, различные СУБД. В данной работе были использованы HTML, СУБД PostgreSQL и платформа \textit{Ruby On Rails}.\\
Используя данные технологии можно получить информационную систему учета успеваемости и посещаемости слушателей Факультета Довузовского Образования (ФДО) МГИУ,  которая позволяет формировать учебные группы, контролировать успеваемость и посещаемость слушателей ФДО, а также вести отчетность по учебным дисциплинам и группам.\\
Данную систему можно создать решив следующие задачи:\\
\begin{itemize}
\item реализация интерфейса контроля успеваемости слушателей ФДО. преподаватель будет проставлять баллы в  определенной дисциплине, по определенному предмету, в указанную дату;\\ 
\item реализация интерфейса контроля посещаемости слушателей ФДО. преподаватель будет через специально организованный интерфейс выставлять по определенному предмету, в конкретную дату отметку о том был ли абитуриент на данном занятии, с использованием системы drag\& drop;\\
\item реализация интерфейса предоставления отчетов по любой запрошено пользователем информации.\\
\end{itemize}
\hspace*{0.25cm}С точки зрения конечного пользователя это означает, что в системе должен быть предусмотрен интерфейс для учета успеваемости слушателей ФДО (преподаватель будет проставлять баллы в  определенной дисциплине, по определенному предмету, в указанную дату), также контроль посещаемости слушателей ФДО(будет реализована система учета посещаемости слушателями ФДО, учебных курсов (преподаватель будет через специально организованный интерфейс выставлять по определенному предмету, в конкретную дату отметку о том был ли абитуриент на данном занятии) и интерфейс формирование учебных групп подготовительных курсов с учетом всех выбранных слушателем направлений довузовской подготовки: будет реализован интерфейс организации учебных групп, исходя из списков слушателей и выбранных ими дисциплинами с использованием системы drag\&drop.

\section{Используемые технологии}
\hspace*{0.5cm}\textit{Ruby On Rails} -- это полноценный, многоуровневый фреймворк для построения веб-приложений, использующих базы данных, который основан на архитектуре Модель-Представление-Контроллер (Model-View-Controller, MVC). Динамичный AJAX-интерфейс, обработка запросов и выдача данных в контроллерах, предметная область, отраженная в базе данных, — для всего этого Rails предоставляет однородную среду разработки на Ruby.\\
Ключевое слово в Ruby on Rails -- оптимизация. Главные преимущества данной системы:\\
\begin{itemize}
\item внятные сообщения об ошибках в браузере;\\
\item очень удобное средство scaffold. Это когда на вход подается база данных, а затем одной командой создается как работающая система управления для этой базы данных, так и готовый сайт, отображающий эти данные;\\
\item возможность вывода результата в XML через спец-шаблоны. Это и есть та точка, где Ruby можно связать с другими решениями, например используя Flash.\\
\end{itemize}
Основна парадигма фреймворка Ruby on Rails это MVC. \\ 
\textbf{Model-View-Controller} (MVC, «Модель - Представление - Контроллер») -- шаблон проектирования, в котором модель данных приложения, пользовательский интерфейс и управляющая логика разделены на три отдельных компонента так, что модификация одного из компонентов оказывает минимальное воздействие на остальные. Шаблон MVC позволяет разделить данные, представление и обработку действий пользователя на три отдельных компонента:
\begin{itemize}
\item Модель (Model). Модель предоставляет данные (обычно для View), а также реагирует на запросы (обычно от контроллера), изменяя своё состояние.
\item Представление (View). Отвечает за отображение информации (пользовательский интерфейс).
\item Поведение (Controller). Интерпретирует данные, введённые пользователем, и информирует модель и представление о необходимости соответствующей реакции.
\end{itemize}
\hspace*{0.5cm}Важно отметить, что как представление, так и поведение зависят от модели. Однако модель не зависит ни от представления, ни от поведения. Это одно из ключевых достоинств подобного разделения. Оно позволяет строить модель независимо от визуального представления, а также создавать несколько различных представлений для одной модели.
\hspace*{0.5cm}Основной принцип данного фреймворка : "Работа как отдых". Ввиду неоспоримых преимуществ работы с данной системой, именно фреймворк Ruby on Rails был выбран для реализации данного проекта.\\  
\endinput

